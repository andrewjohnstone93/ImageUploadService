{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f98301dbcc3d3a6112a5.hot-update.js","sources":["webpack:///./components/RegisterForm.js"],"sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { Cookies } from 'react-cookie';\r\nimport Router from 'next/router';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst REGISTER_END_POINT = 'http://localhost:4000/users/register';\r\nconst LOGIN_END_POINT = 'http://localhost:4000/users/authenticate';\r\nconst cookies = new Cookies();\r\n\r\nexport default class LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: cookies.get('token') || null,\r\n      username: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    }\r\n\r\n    this.handleUsernameChange = this.handleUsernameChange.bind(this)\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this)\r\n    this.onRegisterClick = this.onRegisterClick.bind(this)\r\n  }\r\n\r\n  onRegisterClick = async () => {\r\n    event.preventDefault();\r\n\r\n    var registerDetails = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    }\r\n\r\n    const response = await axios.post(REGISTER_END_POINT, registerDetails)\r\n\r\n    if (response.data.sucess) {\r\n      const loginResponse = await axios.post(LOGIN_END_POINT, registerDetails)\r\n      \r\n      if( loginResponse.data.success) {\r\n        const token = response.data.data.token;\r\n\r\n        cookies.set('token', token);\r\n        this.setState({\r\n          token: token\r\n        })\r\n  \r\n        if (token) {\r\n          Router.push('/internal')\r\n        }  \r\n      } \r\n    } else {\r\n      this.setState({ message: response.data.message })\r\n    }\r\n  }\r\n\r\n  handleUsernameChange(e) {\r\n    this.setState({ username: e.target.value });\r\n  }\r\n\r\n  handlePasswordChange(e) {\r\n    this.setState({ password: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card style={{ padding: '10px' }}>\r\n          <Container component=\"main\" maxWidth=\"xs\" style={{ textAlign: 'center' }}>\r\n            <CssBaseline />\r\n            <div>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Register\r\n              </Typography>\r\n\r\n              <Typography component=\"h4\" variant=\"h5\" style={{ color: \"#ff0000\"}}>\r\n                {this.state.message}\r\n              </Typography>\r\n\r\n              <form noValidate>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  onChange={this.handleUsernameChange}\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.handlePasswordChange}\r\n                  autoComplete=\"current-password\"\r\n                />\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => this.onRegisterClick()}\r\n                >\r\n                  Register\r\n                  </Button>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAHA;AAAA;AACA;AADA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAWA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAzBA;AAAA;AACA;AADA;AA0BA;AAAA;AAAA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAbA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAXA;AAYA;AACA;;;AA+BA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;AA3GA;AACA;;;;;A","sourceRoot":""}